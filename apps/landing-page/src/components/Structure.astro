---
// Astro component for Architecture section
const items = [
  // --- Applications ---
  {
    name: "dashboard",
    tech: "TanStack React Start",
    description:
      "Dynamic React dashboard for managing project data with real-time analytics and beautiful charts",
    icon: "Layout",
    color: "text-blue-400",
    gradient: "from-blue-500/10 via-blue-500/5 to-transparent",
    border: "border-blue-500/20",
    glow: "shadow-blue-500/10",
    size: "large",
    type: "Application",
  },
  {
    name: "server",
    tech: "Elysia + Drizzle",
    description:
      "High-performance REST backend server with type-safe database operations",
    icon: "Database",
    color: "text-orange-400",
    gradient: "from-orange-500/10 via-orange-500/5 to-transparent",
    border: "border-orange-500/20",
    glow: "shadow-orange-500/10",
    size: "medium",
    type: "Application",
  },
  {
    name: "landing-page",
    tech: "Astro",
    description: "Stunning landing page with animations",
    icon: "Globe2",
    color: "text-rose-400",
    gradient: "from-rose-500/10 via-rose-500/5 to-transparent",
    border: "border-rose-500/20",
    glow: "shadow-rose-500/10",
    size: "small",
    type: "Application",
  },
  // --- Packages grouped together ---
  {
    name: "ui",
    tech: "React + Tailwind/Shadcn",
    description: "Comprehensive design system with reusable components",
    icon: "Wrench",
    color: "text-teal-400",
    gradient: "from-teal-500/10 via-teal-500/5 to-transparent",
    border: "border-teal-500/20",
    glow: "shadow-teal-500/10",
    size: "small",
    type: "Package",
  },
  {
    name: "eden",
    tech: "Elysia + Eden",
    description: "Type-safe API client",
    icon: "Code",
    color: "text-amber-400",
    gradient: "from-amber-500/10 via-amber-500/5 to-transparent",
    border: "border-amber-500/20",
    glow: "shadow-amber-500/10",
    size: "small",
    type: "Package",
  },
  {
    name: "typescript-config",
    tech: "TypeScript",
    description: "Shared TS configurations",
    icon: "Settings",
    color: "text-indigo-400",
    gradient: "from-indigo-500/10 via-indigo-500/5 to-transparent",
    border: "border-indigo-500/20",
    glow: "shadow-indigo-500/10",
    size: "small",
    type: "Package",
  },
  // --- Remaining Applications ---
  {
    name: "blog",
    tech: "Astro",
    description: "Lightning-fast static blog with MDX support",
    icon: "FileText",
    color: "text-purple-400",
    gradient: "from-purple-500/10 via-purple-500/5 to-transparent",
    border: "border-purple-500/20",
    glow: "shadow-purple-500/10",
    size: "small",
    type: "Application",
  },
  {
    name: "docs",
    tech: "Astro Starlight",
    description: "Beautiful documentation site with search",
    icon: "FileText",
    color: "text-green-400",
    gradient: "from-green-500/10 via-green-500/5 to-transparent",
    border: "border-green-500/20",
    glow: "shadow-green-500/10",
    size: "small",
    type: "Application",
  },
];

// Icon mapping for lucide icons
const iconMap = {
  FileText: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><polyline points="14,2 14,8 20,8"/><line x1="16" y1="13" x2="8" y2="13"/><line x1="16" y1="17" x2="8" y2="17"/><polyline points="10,9 9,9 8,9"/></svg>`,
  Database: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><ellipse cx="12" cy="5" rx="9" ry="3"/><path d="m3 5 0 14c0 1.66 4.03 3 9 3s9-1.34 9-3V5"/><path d="m3 12c0 1.66 4.03 3 9 3s9-1.34 9-3"/></svg>`,
  Globe2: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21.54 15H17a2 2 0 0 0-2 2v4.54"/><path d="M7 3.34V5a3 3 0 0 0 3 3v0a2 2 0 0 1 2 2v0c0 1.1.9 2 2 2v0a2 2 0 0 0 2-2v0c0-1.1.9-2 2-2h3.17"/><path d="M11 21.95V18a2 2 0 0 0-2-2v0a2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05"/><circle cx="12" cy="12" r="10"/></svg>`,
  Layout: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="18" height="18" x="3" y="3" rx="2" ry="2"/><line x1="3" y1="9" x2="21" y2="9"/><line x1="9" y1="21" x2="9" y2="9"/></svg>`,
  Settings: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z"/><circle cx="12" cy="12" r="3"/></svg>`,
  Code: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="16,18 22,12 16,6"/><polyline points="8,6 2,12 8,18"/></svg>`,
  Wrench: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"/></svg>`,
  ArrowUpRight: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m7 7 10 10"/><path d="M7 7h10v10"/></svg>`,
};

function getGridClasses(size: string) {
  // Dynamic col/row spans for bento grid
  switch (size) {
    case "large":
      return "md:col-span-2 md:row-span-2";
    case "medium":
      return "md:col-span-2 md:row-span-1";
    default:
      return "md:col-span-1 md:row-span-1";
  }
}

function getSizeClasses(size: string) {
  switch (size) {
    case "large":
      return {
        padding: "p-5 md:p-6 lg:p-7",
        iconPadding: "p-2.5 md:p-3",
        iconSize: "w-7 h-7 md:w-8 md:h-8",
        titleSize: "text-xl md:text-2xl mb-2 md:mb-3",
        textSize: "text-sm md:text-base",
      };
    case "medium":
      return {
        padding: "p-4 md:p-5",
        iconPadding: "p-2.5 md:p-3",
        iconSize: "w-6 h-6",
        titleSize: "text-lg md:text-xl mb-1 md:mb-2",
        textSize: "text-xs md:text-sm",
      };
    default:
      return {
        padding: "p-3 md:p-4",
        iconPadding: "p-2 md:p-3",
        iconSize: "w-5 h-5",
        titleSize: "text-base md:text-lg mb-1 md:mb-2",
        textSize: "text-xs md:text-sm",
      };
  }
}
---

<section id="structure"  class="container mx-auto flex flex-col items-cetner justify-center gap-4 min-h-screen snap-start flex items-center justify-center ">

    <div class="flex flex-col gap-4 items-center text-center">
      <h2 class="text-4xl md:text-5xl font-bold bg-gradient-to-r from-white via-gray-200 to-gray-400 bg-clip-text text-transparent">
        Architecture
      </h2>
      <p class="text-base md:text-lg text-gray-400 max-w-2xl md:max-w-3xl mx-auto leading-relaxed">
        A thoughtfully designed monorepo structure with clear separation of concerns, shared packages, and modern
        development practices
      </p>
    </div>

    <!-- Perfect Bento Grid -->
    <div class="grid grid-flow-dense grid-cols-1 md:grid-cols-4 lg:grid-cols-6 gap-4  auto-rows-[160px]">
      {items.map((item, index) => {
        const sizeClasses = getSizeClasses(item.size);
        const gridClass = getGridClasses(item.size);
        return (
          <div
            class={`group relative overflow-hidden rounded-3xl bg-gradient-to-br border backdrop-blur-sm hover:scale-[1.02] transition-all duration-700 ease-out hover:shadow-2xl ${item.gradient} ${item.border} ${item.glow} ${getGridClasses(item.size)} bento-card`}
            style={`animation-delay: ${index * 150}ms;`}
          >
            <!-- Animated background -->
            <div class="absolute inset-0 bg-gradient-to-br from-white/[0.08] via-white/[0.02] to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-700"></div>

            <!-- Floating orb effect -->
            <div class="absolute -top-24 -right-24 w-48 h-48 bg-gradient-to-br from-white/10 to-transparent rounded-full blur-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-1000"></div>

            <div class={`relative h-full flex flex-col ${sizeClasses.padding}`}>
              <!-- Header -->
              <div class="flex items-start justify-between mb-4">
                <div class="flex items-center space-x-3">
                  <div class={`flex items-center justify-center ${sizeClasses.iconPadding} rounded-2xl border backdrop-blur-sm bg-white/5 border-white/10 group-hover:scale-110 group-hover:rotate-3 transition-all duration-500`}>
                    <div class={`${item.color} ${sizeClasses.iconSize}`} set:html={iconMap[item.icon as keyof typeof iconMap]} />
                  </div>
                  <div>
                    <span class="inline-block px-3 py-1 bg-white/10 rounded-full text-xs font-medium text-gray-300 mb-2 border border-white/10">
                      {item.type}
                    </span>
                  </div>
                </div>

                <div class="w-5 h-5 text-white/40 group-hover:text-white/80 group-hover:translate-x-1 group-hover:-translate-y-1 transition-all duration-300" set:html={iconMap.ArrowUpRight} />
              </div>

              <!-- Content -->
              <div class="flex-1">
                <h3 class={`font-bold text-white mb-2 group-hover:text-white transition-colors duration-300 ${sizeClasses.titleSize}`}>
                  {item.name}
                </h3>

                <div class="flex items-center space-x-2 mb-3">
                  <span class={`px-2 py-1 bg-black/20 rounded-lg text-xs font-mono border border-white/10 ${item.color}`}>
                    {item.tech}
                  </span>
                </div>

              </div>

              <!-- Bottom indicator -->
              <div class="flex items-center justify-between mt-6">
                <div class="flex space-x-1">
                  {[0, 1, 2].map((i) => (
                    <div
                      class="w-1.5 h-1.5 rounded-full bg-white/20 group-hover:bg-white/40 transition-colors duration-300"
                      style={`animation-delay: ${i * 100}ms;`}
                    />
                  ))}
                </div>
                <div class={`w-2 h-2 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-500 ${item.color.replace('text-', 'bg-')}`}>
                </div>
              </div>
            </div>

            <!-- Shimmer effect -->
            <div class="absolute inset-0 -translate-x-full group-hover:translate-x-full transition-transform duration-1000 bg-gradient-to-r from-transparent via-white/10 to-transparent skew-x-12"></div>
          </div>
        );
      })}
    </div>
</section>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(40px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
  
  .bento-card {
    animation: fadeInUp 0.8s ease-out forwards;
    opacity: 0;
  }
</style>
